   我的一条 ctags 命令

ctags -R --languages=c++ --langmap=c++:+.inl -h +.inl --c++-kinds=+px --fields=+aiKSz --extra=+q --exclude=lex.yy.cc --exclude=copy_lex.yy.cc

命令太长了，折成两行了，可以考虑把命令的各个参数写到文件里去了（具体做法就不谈了）。

1.
-R
表示扫描当前目录及所有子目录（递归向下）中的源文件。并不是所有文件 ctags 都会扫描，如果用户没有特别指明，则 ctags 根据文件的扩展名来决定是否要扫描该文件——如果 ctags 可以根据文件的扩展名可以判断出该文件所使用的语言，则 ctags 会扫描该文件。

2.
--languages=c++
只扫描文件内容判定为 c++ 的文件——即 ctags 观察文件扩展名，如果扩展名对应 c++ ，则扫描该文件。反之如果某个文件叫 aaa.py （ python 文件），则该文件不会被扫描。

3.
--langmap=c++:+.inl
告知 ctags ，以 inl 为扩展名的文件是 c++ 语言写的，在加之上述 2 中的选项，即要求 ctags 以 c++ 语法扫描以 inl 为扩展名的文件。

4.
-h +.inl
告知 ctags ，把以 inl 为扩展名的文件看作是头文件的一种（ inl 文件中放的是 inline 函数的定义，本来就是为了被 include 的）。这样 ctags 在扫描 inl 文件时，就算里面有 static 的全局变量， ctags 在记录时也不会标明说该变量是局限于本文件的（见第一节描述）。

5.
--c++-kinds=+px
记录类型为函数声明和前向声明的语法元素（见第三节）。

6.
--fields=+aiKSz
控制记录的内容（见第四节）。

7.
--extra=+q
让 ctags 额外记录一些东西（见第四、五节）。

8.
--exclude=lex.yy.cc --exclude=copy_lex.yy.cc
告知 ctags 不要扫描名字是这样的文件。还可以控制 ctags 不要扫描指定目录，这里就不细说了。 